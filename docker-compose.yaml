version: '3.3'

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - kafka1
      - akhq
    networks:
      - kafka_network

  akhq:
    image: tchiotludo/akhq:latest
    container_name: akhq
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          security:
            basic-auth:
              - username: admin
                password: changeme  # Change this password!
                groups:
                  - admin
            groups:
              admin:
                name: admin
                roles:
                  - topic/read
                  - topic/insert
                  - topic/delete
                  - topic/config/update
                  - group/read
                  - group/delete
                  - registry/read
                  - registry/insert
                  - registry/update
                  - registry/delete
                  - connect/read
                  - connect/insert
                  - connect/update
                  - connect/delete
                  - acls/read
                  - acls/insert
                  - acls/delete
          connections:
            docker-kafka-server:
              properties:
                bootstrap.servers: "kafka1:19092"
              schema-registry:
                url: "http://schema-registry:8085"
    ports:
      - "8080:8080"
    depends_on:
      - kafka1
      - zoo1
    networks:
      - kafka_network

  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888
    networks:
      - kafka_network

  kafka1:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka1
    container_name: kafka1
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka1:19092,EXTERNAL://128.199.191.113:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: 128.199.191.113
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1
    networks:
      - kafka_network

networks:
  kafka_network:
    name: kafka_network